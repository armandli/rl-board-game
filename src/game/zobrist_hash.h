/* This file is auto-generated */
/* Command Options: player_size=2 table_size=128 */
#ifndef RLBG_ZOBRIST_HASH
#define RLBG_ZOBRIST_HASH
#include <cassert>

#include <type_alias.h>

namespace rlbg {

uint zobrist_hash(uint player, uint p_index){
  uint key = p_index;
  key |= player << 30U;
  switch (key){
    case 0x40000000U: return 0xef1431b9U; break;
    case 0x40000001U: return 0xfbec1a18U; break;
    case 0x40000002U: return 0x3fdeea1aU; break;
    case 0x40000003U: return 0xe8c4fa97U; break;
    case 0x40000004U: return 0x107e212fU; break;
    case 0x40000005U: return 0xdba6d50dU; break;
    case 0x40000006U: return 0x75e2d2d1U; break;
    case 0x40000007U: return 0xad3d733dU; break;
    case 0x40000008U: return 0x4c18f3bdU; break;
    case 0x40000009U: return 0xb448d98cU; break;
    case 0x4000000aU: return 0x9ea35600U; break;
    case 0x4000000bU: return 0x16507408U; break;
    case 0x4000000cU: return 0xe3a0a9b8U; break;
    case 0x4000000dU: return 0x452c56b0U; break;
    case 0x4000000eU: return 0x1b3ae768U; break;
    case 0x4000000fU: return 0x917272a2U; break;
    case 0x40000010U: return 0x574a7473U; break;
    case 0x40000011U: return 0x4f9e048bU; break;
    case 0x40000012U: return 0x7d5cc070U; break;
    case 0x40000013U: return 0xc6149930U; break;
    case 0x40000014U: return 0x4712d6bcU; break;
    case 0x40000015U: return 0x193934abU; break;
    case 0x40000016U: return 0xe2142253U; break;
    case 0x40000017U: return 0xfd3ad874U; break;
    case 0x40000018U: return 0xef54492aU; break;
    case 0x40000019U: return 0x1209a0aeU; break;
    case 0x4000001aU: return 0x7745b18aU; break;
    case 0x4000001bU: return 0x727a0672U; break;
    case 0x4000001cU: return 0xcfd1f6caU; break;
    case 0x4000001dU: return 0x1c1092e5U; break;
    case 0x4000001eU: return 0xa5379a0cU; break;
    case 0x4000001fU: return 0x56f10061U; break;
    case 0x40000020U: return 0xbf5d5f82U; break;
    case 0x40000021U: return 0x11ed6207U; break;
    case 0x40000022U: return 0x135b1225U; break;
    case 0x40000023U: return 0xa460b0aeU; break;
    case 0x40000024U: return 0xe89280c2U; break;
    case 0x40000025U: return 0x40b86618U; break;
    case 0x40000026U: return 0xe6407e17U; break;
    case 0x40000027U: return 0xb60968e0U; break;
    case 0x40000028U: return 0x59d04f7dU; break;
    case 0x40000029U: return 0xabcdef8aU; break;
    case 0x4000002aU: return 0x2c3132eaU; break;
    case 0x4000002bU: return 0x15abc891U; break;
    case 0x4000002cU: return 0xa81cced0U; break;
    case 0x4000002dU: return 0x9a477206U; break;
    case 0x4000002eU: return 0x10f0f445U; break;
    case 0x4000002fU: return 0x45aac22dU; break;
    case 0x40000030U: return 0xfe61739cU; break;
    case 0x40000031U: return 0x722bb055U; break;
    case 0x40000032U: return 0x6474c8b1U; break;
    case 0x40000033U: return 0x6f8c467aU; break;
    case 0x40000034U: return 0xe6f5bfe8U; break;
    case 0x40000035U: return 0xea7eba90U; break;
    case 0x40000036U: return 0xf4f776d8U; break;
    case 0x40000037U: return 0x383860bcU; break;
    case 0x40000038U: return 0x99473a4cU; break;
    case 0x40000039U: return 0xdec464b3U; break;
    case 0x4000003aU: return 0xd93ecc26U; break;
    case 0x4000003bU: return 0xe188c582U; break;
    case 0x4000003cU: return 0xb0a36c83U; break;
    case 0x4000003dU: return 0xbf2bd162U; break;
    case 0x4000003eU: return 0x6f1a4867U; break;
    case 0x4000003fU: return 0x4bb0b82aU; break;
    case 0x40000040U: return 0x347d5b2eU; break;
    case 0x40000041U: return 0x218e63dbU; break;
    case 0x40000042U: return 0x8f393cdaU; break;
    case 0x40000043U: return 0x16e2c574U; break;
    case 0x40000044U: return 0x84bb4e26U; break;
    case 0x40000045U: return 0x13f6e845U; break;
    case 0x40000046U: return 0xd4d29311U; break;
    case 0x40000047U: return 0x120b8bb0U; break;
    case 0x40000048U: return 0x1d5ee89bU; break;
    case 0x40000049U: return 0xdaafbfd4U; break;
    case 0x4000004aU: return 0xa920d236U; break;
    case 0x4000004bU: return 0x5e8fd4c3U; break;
    case 0x4000004cU: return 0x136a88aaU; break;
    case 0x4000004dU: return 0x4a9b7f30U; break;
    case 0x4000004eU: return 0x736e9e86U; break;
    case 0x4000004fU: return 0x7a8ecceeU; break;
    case 0x40000050U: return 0xa6614406U; break;
    case 0x40000051U: return 0xa80fd63cU; break;
    case 0x40000052U: return 0xf937d784U; break;
    case 0x40000053U: return 0x54028432U; break;
    case 0x40000054U: return 0x98b71e21U; break;
    case 0x40000055U: return 0x76b6ee83U; break;
    case 0x40000056U: return 0xf4576dddU; break;
    case 0x40000057U: return 0xd1b6d725U; break;
    case 0x40000058U: return 0x5dc6bd4eU; break;
    case 0x40000059U: return 0xdb148ca2U; break;
    case 0x4000005aU: return 0xe82e4c4cU; break;
    case 0x4000005bU: return 0x3d97bb6eU; break;
    case 0x4000005cU: return 0x6fce37fdU; break;
    case 0x4000005dU: return 0x630ab5b2U; break;
    case 0x4000005eU: return 0x870889cfU; break;
    case 0x4000005fU: return 0x1631cb38U; break;
    case 0x40000060U: return 0xe355bc99U; break;
    case 0x40000061U: return 0x1faa5cc1U; break;
    case 0x40000062U: return 0xc7812a3aU; break;
    case 0x40000063U: return 0xa90593f5U; break;
    case 0x40000064U: return 0xc519ad30U; break;
    case 0x40000065U: return 0xcb5f66aaU; break;
    case 0x40000066U: return 0x6531d046U; break;
    case 0x40000067U: return 0xa762c116U; break;
    case 0x40000068U: return 0x6ac5abd9U; break;
    case 0x40000069U: return 0x50be1517U; break;
    case 0x4000006aU: return 0x1f05e64eU; break;
    case 0x4000006bU: return 0xf3679248U; break;
    case 0x4000006cU: return 0x684a75ebU; break;
    case 0x4000006dU: return 0x577332f3U; break;
    case 0x4000006eU: return 0x5984ddc3U; break;
    case 0x4000006fU: return 0xa94581eaU; break;
    case 0x40000070U: return 0xdb7c0d22U; break;
    case 0x40000071U: return 0x62982ffbU; break;
    case 0x40000072U: return 0x75ac6630U; break;
    case 0x40000073U: return 0x28a34c50U; break;
    case 0x40000074U: return 0xaffbdcedU; break;
    case 0x40000075U: return 0xa6399118U; break;
    case 0x40000076U: return 0x9e3a4ef5U; break;
    case 0x40000077U: return 0x771c56adU; break;
    case 0x40000078U: return 0xe8253943U; break;
    case 0x40000079U: return 0x69639c08U; break;
    case 0x4000007aU: return 0xf8bfbddbU; break;
    case 0x4000007bU: return 0x61b6b3f3U; break;
    case 0x4000007cU: return 0x552ad3eaU; break;
    case 0x4000007dU: return 0x417fc343U; break;
    case 0x4000007eU: return 0x5af85026U; break;
    case 0x4000007fU: return 0x11d098e9U; break;
    case 0x80000000U: return 0xa03b2035U; break;
    case 0x80000001U: return 0xfe0b0619U; break;
    case 0x80000002U: return 0x94e6ef26U; break;
    case 0x80000003U: return 0x85e2be46U; break;
    case 0x80000004U: return 0xa1a3cb4fU; break;
    case 0x80000005U: return 0xcae563ddU; break;
    case 0x80000006U: return 0x59bb9f8dU; break;
    case 0x80000007U: return 0xdd6f5b9cU; break;
    case 0x80000008U: return 0x3a93c94bU; break;
    case 0x80000009U: return 0x5a053737U; break;
    case 0x8000000aU: return 0x31d1a589U; break;
    case 0x8000000bU: return 0x3c9d6a46U; break;
    case 0x8000000cU: return 0x2d402df7U; break;
    case 0x8000000dU: return 0xf16e016aU; break;
    case 0x8000000eU: return 0xd996286dU; break;
    case 0x8000000fU: return 0xeb9b6cacU; break;
    case 0x80000010U: return 0x304a4387U; break;
    case 0x80000011U: return 0x44726f74U; break;
    case 0x80000012U: return 0xb3ed93cfU; break;
    case 0x80000013U: return 0xce233b50U; break;
    case 0x80000014U: return 0x8bd6b786U; break;
    case 0x80000015U: return 0xce4e8230U; break;
    case 0x80000016U: return 0x2bd28c43U; break;
    case 0x80000017U: return 0x6205c647U; break;
    case 0x80000018U: return 0x11df12fcU; break;
    case 0x80000019U: return 0xbfb78b08U; break;
    case 0x8000001aU: return 0x8d94bfffU; break;
    case 0x8000001bU: return 0xf453d5ddU; break;
    case 0x8000001cU: return 0xd7002974U; break;
    case 0x8000001dU: return 0x730e5cf1U; break;
    case 0x8000001eU: return 0x5d03f95aU; break;
    case 0x8000001fU: return 0x522f4aeeU; break;
    case 0x80000020U: return 0x9865b9b7U; break;
    case 0x80000021U: return 0x7b8726eeU; break;
    case 0x80000022U: return 0xae629bf0U; break;
    case 0x80000023U: return 0x8119e030U; break;
    case 0x80000024U: return 0x491f7ee1U; break;
    case 0x80000025U: return 0xa2e0cd91U; break;
    case 0x80000026U: return 0xb1516ca3U; break;
    case 0x80000027U: return 0x9a6e38ddU; break;
    case 0x80000028U: return 0x64ab301bU; break;
    case 0x80000029U: return 0xc0bcf9a9U; break;
    case 0x8000002aU: return 0xd2b350f2U; break;
    case 0x8000002bU: return 0x2488aecfU; break;
    case 0x8000002cU: return 0xa588b81dU; break;
    case 0x8000002dU: return 0x63e1f4e2U; break;
    case 0x8000002eU: return 0x21ef9c0fU; break;
    case 0x8000002fU: return 0x126ddc04U; break;
    case 0x80000030U: return 0x1786f9feU; break;
    case 0x80000031U: return 0x62a4018fU; break;
    case 0x80000032U: return 0xd0b60f5fU; break;
    case 0x80000033U: return 0x8d9284d5U; break;
    case 0x80000034U: return 0xba27c0d2U; break;
    case 0x80000035U: return 0x4a4a3a67U; break;
    case 0x80000036U: return 0x2400231dU; break;
    case 0x80000037U: return 0x71a39a75U; break;
    case 0x80000038U: return 0x24e1c2e7U; break;
    case 0x80000039U: return 0x8455c29aU; break;
    case 0x8000003aU: return 0x2f475ecdU; break;
    case 0x8000003bU: return 0xb93e4251U; break;
    case 0x8000003cU: return 0xfb35339cU; break;
    case 0x8000003dU: return 0xd5195084U; break;
    case 0x8000003eU: return 0xf3cf643aU; break;
    case 0x8000003fU: return 0x6f52e511U; break;
    case 0x80000040U: return 0x6d3b4fa1U; break;
    case 0x80000041U: return 0xf0d1e9d8U; break;
    case 0x80000042U: return 0xbd4e2419U; break;
    case 0x80000043U: return 0x7552febdU; break;
    case 0x80000044U: return 0x25d671ebU; break;
    case 0x80000045U: return 0x919dcecbU; break;
    case 0x80000046U: return 0x37c08b24U; break;
    case 0x80000047U: return 0x6a853680U; break;
    case 0x80000048U: return 0x95a11560U; break;
    case 0x80000049U: return 0xb3480d2dU; break;
    case 0x8000004aU: return 0xdd8fa276U; break;
    case 0x8000004bU: return 0x8fa642b0U; break;
    case 0x8000004cU: return 0xb5d5209cU; break;
    case 0x8000004dU: return 0x295aae7fU; break;
    case 0x8000004eU: return 0x92e44c40U; break;
    case 0x8000004fU: return 0xe2078db8U; break;
    case 0x80000050U: return 0xb6ba2463U; break;
    case 0x80000051U: return 0x10a22d43U; break;
    case 0x80000052U: return 0x86549dccU; break;
    case 0x80000053U: return 0xccf63e52U; break;
    case 0x80000054U: return 0x1904c53dU; break;
    case 0x80000055U: return 0x638d3701U; break;
    case 0x80000056U: return 0x8d5e505bU; break;
    case 0x80000057U: return 0xf6e62d0aU; break;
    case 0x80000058U: return 0xead6d4fdU; break;
    case 0x80000059U: return 0xe2893ceeU; break;
    case 0x8000005aU: return 0x1e69eec8U; break;
    case 0x8000005bU: return 0x4f43763cU; break;
    case 0x8000005cU: return 0x54befd61U; break;
    case 0x8000005dU: return 0x9a07866bU; break;
    case 0x8000005eU: return 0xc1ca8859U; break;
    case 0x8000005fU: return 0x59b5ddb2U; break;
    case 0x80000060U: return 0x832d7dbaU; break;
    case 0x80000061U: return 0xb9fdac6fU; break;
    case 0x80000062U: return 0x37f9379fU; break;
    case 0x80000063U: return 0x4d23ec41U; break;
    case 0x80000064U: return 0x849d6f84U; break;
    case 0x80000065U: return 0xb123813dU; break;
    case 0x80000066U: return 0x7271b8c6U; break;
    case 0x80000067U: return 0x7e5b7b75U; break;
    case 0x80000068U: return 0x3b453f35U; break;
    case 0x80000069U: return 0x97d93b5aU; break;
    case 0x8000006aU: return 0x71b5d841U; break;
    case 0x8000006bU: return 0x663af5a1U; break;
    case 0x8000006cU: return 0xf9fa38cbU; break;
    case 0x8000006dU: return 0xb9fac750U; break;
    case 0x8000006eU: return 0x8eda2f96U; break;
    case 0x8000006fU: return 0xb8c86615U; break;
    case 0x80000070U: return 0x98433358U; break;
    case 0x80000071U: return 0xa13b65a5U; break;
    case 0x80000072U: return 0xd2179b9fU; break;
    case 0x80000073U: return 0xb6ff889eU; break;
    case 0x80000074U: return 0xaa999c59U; break;
    case 0x80000075U: return 0xd7649083U; break;
    case 0x80000076U: return 0x3a76bf9cU; break;
    case 0x80000077U: return 0xc2ee11afU; break;
    case 0x80000078U: return 0xab38ee3aU; break;
    case 0x80000079U: return 0x825e0fe4U; break;
    case 0x8000007aU: return 0x63d6e2e5U; break;
    case 0x8000007bU: return 0xd8e961e2U; break;
    case 0x8000007cU: return 0xfbcbc17cU; break;
    case 0x8000007dU: return 0x955bb100U; break;
    case 0x8000007eU: return 0xcbd9a27fU; break;
    case 0x8000007fU: return 0x32580272U; break;
    default: assert(false);
  }
}
uint zobrist_hash(uint player){
  uint key = player << 30U;
  switch (key){
    case 0x40000000U: return 0x33bb8f42U; break;
    case 0x80000000U: return 0x9ee47b4dU; break;
    default: assert(false);
  }
}

constexpr uint PASS_HASH = 0xf0b89cb3U;


constexpr uint RESIGN_HASH = 0xffe8a91bU;


constexpr uint EMPTY_BOARD = 0U;

} // rlbg
#endif//RLBG_ZOBRIST_HASH

